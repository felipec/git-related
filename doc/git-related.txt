git-related(1)
==============

NAME
----
git-related - Find related people and commits

SYNOPSIS
--------
[verse]
'git related' [<options>] (<revision range> | <patches>)

DESCRIPTION
-----------

This tool finds people that might be interested in a commit by going back
through the history for each single hunk modified, and gathering the people that
reviewed, acknowledged, signed, or authored the code the patch is modifying.

It does this by running `git blame` incrementally on each hunk, and
fetching the relevant commit message. After gathering all the relevant
people, it groups them to show what exactly was their role when they
participated in the development of the relevant commit, and how many
relevant commits they participated in. They are only displayed if they pass
a minimum threshold of participation.

The commits can be a revision range (as used by `git log`) or files (.patch).

OUTPUT
------

The default output lists the person of interest and the involvement they had in
the previous patches: author, reviewer, signer, etc.

--------
Junio C Hamano <xx@gmail.com> (signer: 90%, author: 5%)
Felipe Contreras <xx@gmail.com> (author: 25%, reviewer: 2%)
Sverre Rabbelier <xx@gmail.com> (author: 17%, acker: 2%, signer: 7%)
Jeff King <xx@gmail.com> (acker: 17%, author: 10%)
Shawn O. Pearce <xx@gmail.com> (author: 5%, signer: 2%, cced: 2%)
Elijah Newren <xx@gmail.com> (author: 10%)
--------

OPTIONS
-------

-t::
--threshold::
	Threshold of role participation (default: 10)

-d::
--since=<since>::
	How far back to search for relevant commits (default: 5-years-ago).

-c::
--commits[=<format>]::
	List commits instead of persons. Possible values are
	'long', 'full', 'raw', 'oneline'. (default: oneline)

-r::
--roles::
  Show specific roles in the output (singer, reviewer, helper, etc.).

EXAMPLES
--------

* From 'master' to the current branch:
+
------------
$ git related master..@
------------

* Same as above:
+
------------
$ git related master
------------

* Or if 'master' is your upstream tracking branch:
+
------------
$ git related
------------

* From a group of patch files:
+
------------
$ git related *.patch
------------
